

<div class="container col-lg-6" style="margin-top: 50px; margin-bottom: 100px">
  <h2 class="mb-4">Restaurant Registration Form</h2>

  <%= form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f| %>
    <%#= render "restaurant_owners/shared/error_messages", resource: resource %>

    <div class="field mb-3">
      <%= f.label :email , class:"form-label" %><br/>
      <%= f.email_field :email, autofocus: true, autocomplete: "email", class:'form-control' %>

      <!--      Validation-->
      <% if resource.errors.messages[:email].any? %>
        <div style="color: #B00100", class="my-1"><%= "Email #{resource.errors.messages[:email][0]}" %></div>
      <% end %>
    </div>

    <div class="field mb-3">
      <%= f.label :restaurant_name , class:"form-label" %><br/>
      <%= f.text_field :restaurant_name, autofocus: true, class:'form-control' %>

      <!--      Validation-->
      <% if resource.errors.messages[:restaurant_name].any? %>
        <div style="color: #B00100", class="my-1"><%= "Name #{resource.errors.messages[:restaurant_name][0]}" %></div>
      <% end %>
    </div>

    <div class="field mb-3">
      <%= f.label :location , class:"form-label" %><br/>
      <%= f.text_field :location, autofocus: true, class:'form-control' %>

      <!--      Validation-->
      <% if resource.errors.messages[:location].any? %>
        <div style="color: #B00100", class="my-1"><%= "location #{resource.errors.messages[:location][0]}" %></div>
      <% end %>
    </div>

    <div class="field mb-3">
      <%= f.label :food_type , class:"form-label" %><br/>
      <%= f.text_field :food_type, autofocus: true, class:'form-control' %>

      <!--      Validation-->
      <% if resource.errors.messages[:food_type].any? %>
        <div style="color: #B00100", class="my-1"><%= "type #{resource.errors.messages[:food_type][0]}" %></div>
      <% end %>
    </div>

    <div class="field mb-3">
      <%= f.label :timings , class:"form-label" %><br/>
      <%= f.text_field :timings, autofocus: true, class:'form-control' %>

      <!--      Validation-->
      <% if resource.errors.messages[:timings].any? %>
        <div style="color: #B00100", class="my-1"><%= "timings #{resource.errors.messages[:timings][0]}" %></div>
      <% end %>
    </div>

    <div class="field mb-3">
      <%= f.label :description , class:"form-label" %><br/>
      <%= f.text_field :description, autofocus: true, class:'form-control' %>

      <!--      Validation-->
      <% if resource.errors.messages[:description].any? %>
        <div style="color: #B00100", class="my-1"><%= "description #{resource.errors.messages[:description][0]}" %></div>
      <% end %>
    </div>

    <div class="field mb-3">
      <%= f.label :password,class:"form-label" %>
      <% if @minimum_password_length %>
        <em>(<%= @minimum_password_length %> characters minimum)</em>
      <% end %><br/>
      <%= f.password_field :password, autocomplete: "new-password", class:'form-control' %>

      <!--      Validations for Password-->
      <% if resource.errors.messages[:password].any? %>
        <div style="color: #B00100", class="my-1"><%= "Password #{resource.errors.messages[:password][0]}" %></div>
      <% end %>

    </div>

    <div class="field mb-3">
      <%= f.label :password_confirmation, class:"form-label" %><br/>
      <%= f.password_field :password_confirmation, autocomplete: "new-password", class:'form-control' %>

      <!--      Validations for Password Confirmation-->
      <% if resource.errors.messages[:password_confirmation].any? %>
        <div style="color: #B00100", class="my-1"><%= "Password Confirmation #{resource.errors.messages[:password_confirmation][0]}" %></div>
      <% end %>
    </div>

    <div class="actions mb-3">
      <%= f.submit "Sign up", class:'btn btn-primary' %>
    </div>
  <% end %>

  <%= render "restaurant_owners/shared/links" %>

</div>


<script>

    let autocomplete;

    function initMap() {

        const input_to = document.getElementById('restaurant_owner_restaurant_name')

        const options = {
            componentRestrictions: {country: "PK"},
            fields: ["address_components", "geometry", "icon", "name"],
            strictBounds: false,
            types: ["restaurant"],
        };

        autocomplete = new google.maps.places.Autocomplete(input_to, options);
    }

</script>
<script
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBdIQygbTt6E8I-idAJtDUiLBYwXAio4dE&libraries=places&callback=initMap">
</script>
